/*
 * This file was generated by the Gradle 'init' task.
 *
 * This project uses @Incubating APIs which are subject to change.
 */

plugins {
    id("de.denkunddachte.b2biutils.java-application-conventions")
}

val awsSdkVersion = "1.12.257"

dependencies {
    /* add dependencies for JavaTask (e.g. AWS libs, Sterling internal libs */
    /* AWS S3 test (V1 API): */
    /*
    implementation(platform("com.amazonaws:aws-java-sdk-bom:${awsSdkVersion}"))
    implementation("com.amazonaws:aws-java-sdk-s3:${awsSdkVersion}")
    */
    // V2:
    // implementation(platform("software.amazon.awssdk:bom:${awsSdkVersion}"))
    // implementation("software.amazon.awssdk:s3:${awsSdkVersion}")

    // https://mvnrepository.com/artifact/org.json/json
    implementation("org.json:json:20170516")

    // https://mvnrepository.com/artifact/com.microsoft.sqlserver/mssql-jdbc
    implementation("com.microsoft.sqlserver:mssql-jdbc:8.4.1.jre8")

    // Add B2Bi libraries from $SI_BASE/jars to b2bilibs folder: 
    implementation(files("b2bilibs/platform_asi/6_1/platform_asi.jar"))
    implementation(files("b2bilibs/platform_ifcbase/6_1/platform_ifcbase.jar"))
    implementation(files("b2bilibs/platform_afc/6_1/platform_afc.jar"))
    //implementation(files('b2bilibs/install_foundation.jar'))

}

application {
    // Define the main class for the application.
    mainClass.set("de.denkunddachte.b2biutils.JavaTask")
}


/*
  Hack to copy JavaTask.java source file to build/classes folder so getting embedded data from source
  works in e.g. IntelliJ IDEA (uses gradle to build&run).
 */
tasks.named("compileJava") {
    dependsOn("copyJavaTaskSource")
}

tasks.register<Copy>("copyJavaTaskSource") {
    from(project.sourceSets.get("main").java.filter({it -> it.name.equals("JavaTask.java")}))
    into("build/classes/java/main/de/denkunddachte/b2biutils" )
}
