{
  // BPML code snippets
  "BPML Create BP": {
    "prefix": "bpBP",
    "body": [
      "<process name=\"${1:name}\">",
      "  <sequence name=\"${1:name}\">",
      "    $2",
      "  </sequence>",
      "  <!-- END OF sequence \"${1:name}\" -->",
      "</process>"
    ],
    "description": "BPML Empty BP"
  },
  "BPML Create DocToDOM": {
    "prefix": "bpDocToDOM",
    "body": [
      "<assign to=\"$1\" from=\"DocToDOM(PrimaryDocument,'false','false')\"/>",
    ],
    "description": "BPML DocToDOM"
  },
  "BPML Create DOMToDoc": {
    "prefix": "bpDOMToDoc",
    "body": [
      "<assign to=\".\" from=\"DOMToDoc(/ProcessData/$1,'MyDoc')\"/>",
    ],
    "description": "BPML DocToDOM"
  },
  "BPML Create Condition": {
    "prefix": "bpCondition",
    "body": [
      "<rule name=\"${1:name}?\">",
      "  <condition>$2</condition>",
      "</rule>",
      "",
      "<choice name=\"?${1:name}?\">",
      "  <select>",
      "    <case ref=\"${1:name}?\" activity=\"${1:name}!\"/>",
      "  </select>",
      "  <sequence name=\"${1:name}!\">",
      "    $3",
      "  </sequence>",
      "  <!-- END OF sequence \"${1:name}!\" -->",
      "</choice>",
      "<!-- END OF choice \"?${1:name}?\" -->"
    ],
    "description": "BPML Create Condition"
  },
  "BPML Create Release": {
    "prefix": "bpRelease",
    "body": [
      "<operation name=\"ReleaseService\">",
      "  <participant name=\"ReleaseService\"/>",
      "  <output message=\"ReleaseServiceTypeInputMessage\">",
      "    <assign to=\".\" from=\"*\"/>",
      "    <assign to=\"TARGET\">$1</assign>",
      "  </output>",
      "  <input message=\"inmsg\">",
      "    <assign to=\".\" from=\"*\"/>",
      "  </input>",
      "</operation>"
    ],
    "description": "BPML Create Loop"
  },
  "BPML Create Loop": {
    "prefix": "bpLoop",
    "body": [
      "<rule name=\"${1:name}?\">",
      "  <condition>$2</condition>",
      "</rule>",
      " ",
      "<sequence name=\"${1:name}Loop\">",
      "  <choice name=\"?${1:name}?\">",
      "    <select>",
      "      <case ref=\"${1:name}?\" activity=\"${1:name}!\"/>",
      "    </select>",
      "    <sequence name=\"${1:name}!\">",
      "",
      "      $2",
      "      <operation name=\"Release Service\">",
      "        <participant name=\"ReleaseService\"/>",
      "        <output message=\"ReleaseServiceTypeInputMessage\">",
      "          <assign to=\".\" from=\"*\"/>",
      "          <assign to=\"TARGET\">$3</assign>",
      "        </output>",
      "        <input message=\"inmsg\">",
      "          <assign to=\".\" from=\"*\"/>",
      "        </input>",
      "      </operation>",
      " ",
      "      <repeat name=\"goto_next\" ref=\"?${1:name}?\"/>",
      " ",
      "    </sequence>",
      "    <!-- END OF sequence \"${1:name}!\" -->",
      "  </choice>",
      "  <!-- END OF choice \"?${1:name}?\" -->",
      "</sequence>",
      "<!-- END OF sequence \"${1:name}Loop\" -->",
    ],
    "description": "BPML Create Loop"
  },  
  "BPML Assign Service": {
    "prefix": "bpAssign",
    "body": [
      "<operation name=\"Assign:${1:name}\">",
      "  <participant name=\"AssignService\" />",
      "  <output message=\"Xout\">",
      "    <assign to=\"${2:targetNode1}\" from=\"sci-get-property('myprops', '${2:targetNode1}')\" append=\"true\" />",
      "    <assign to=\"${3:targetNode2}\" from=\"sci-get-property('myprops', '${3:targetNode2}')\" />",
      "  </output>",
      "  <input message=\"Xin\">",
      "    <assign to=\".\" from=\"*\" />",
      "  </input>",
      "</operation>",
    ],
    "description": "BPML Assign Service"
  },
  "BPML Timestamp Service": {
    "prefix": "bpTimeStamp",
    "body": [
      "<operation name=\"Timestamp Utility\">",
      "  <participant name=\"TimestampUtilService\" />",
      "  <output message=\"TimestampUtilServiceTypeInputMessage\">",
      "    <assign to=\".\" from=\"*\" />",
      "    <assign to=\"action\">current_time</assign>",
      "    <assign to=\"format\">${1:yyyyMMdd_HHmmss0SSS}</assign>",
      "  </output>",
      "  <input message=\"inmsg\">",
      "    <assign to=\"/ProcessData/TMP/TIMESTAMP\" from=\"time/text()\" append=\"true\"/>",
      "  </input>",
      "</operation>",
    ],
    "description": "BPML Timestamp Service"
  },
  "BPML Custom log message": {
    "prefix": "bpLogMessage",
    "body": [
      "<operation name=\"WriteLog\">",
      "  <participant name=\"${1:logger}\" />",
      "  <output message=\"Xout\">",
      "    <assign to=\"Config\">${1:logger}</assign>",
      "    <assign to=\"log-level\">INFO</assign>",
      "    <assign to=\"fail-on-error\">N</assign>",
      "    <assign to=\"log-message\" from=\"concat('[BP=', /ProcessData/BP/MAIN, ':', /ProcessData/BP/ID, ']')\"/>",
      "  </output>",
      "  <input message=\"Xin\">",
      "    <assign to=\".\" from=\"*\"/>",
      "  </input>",
      "</operation>",
    ],
    "description": "BPML Custom log message"
  },
  "BPML BP Exception": {
    "prefix": "bpException",
    "body": [
      "<operation name=\"Business Process Exception\">",
      "  <participant name=\"BPExceptionService\" />",
      "  <output message=\"BPExceptionServiceTypeInputMessage\">",
      "    <assign to=\".\" from=\"*\"/>",
      "    <assign to=\"exceptionCode\" from=\"string(/ProcessData/ERROR_SERVICE/ADV_STATUS[last()])\" />",
      "    <assign to=\"statusReport\" from=\"string(/ProcessData/ERROR_SERVICE/ADV_STATUS[last()])\" />",
      "  </output>",
      "  <input message=\"Xin\">",
      "    <assign to=\".\" from=\"*\"/>",
      "  </input>",
      "</operation>",
    ],
    "description": "BPML throw exception"
  },
  "BPML Sequence": {
    "prefix": "bpSequence",
    "body": [
      "<sequence name=\"${1:name}\">",
      "",
      "  <onFault code=\"${2:Prev_NotSuccess_Adv_Status}\">",
      "    <assign to=\"TMP_STEP/EXCEPTION\" from=\"string(/ProcessData/ERROR_SERVICE/ADV_STATUS[last()])\" append=\"true\"/>",
        "",
        "  </onFault>",
      "</sequence>",
      "<!-- End sequence \"${1:name}\" -->",
    ],
    "description": "BPML sequence with onFault"
  },
  "BPML Inline": {
    "prefix": "bpInline",
    "body": [
      "<operation name=\"${1:name}\">",
      "  <participant name=\"InvokeSubProcessService\" />",
      "  <output message=\"InvokeSubProcessServiceTypeInputMessage\">",
      "    <assign to=\"INVOKE_MODE\">INLINE</assign>",
      "    <assign to=\"WFD_NAME\">${2:WFDName}</assign>",
      "    <assign to=\"NOTIFY_PARENT_ON_ERROR\">ALL</assign>",
      "  </output>",
      "  <input message=\"inmsg\">",
      "    <assign to=\".\" from=\"*\" />",
      "  </input>",
      "</operation>",
    ],
    "description": "BPML invoke BP inline"
  },
  "BPML JavaTask": {
    "prefix": "bpJavaTask",
    "body": [
      "<operation name=\"${1:name}\">",
      "  <participant name=\"DD_JavaTaskService\" />",
      "  <output message=\"Xout\">",
      "    <assign to=\".\" from=\"*\" />",
      "    <assign to=\"srcLocationMode\">inline</assign>",
      "    <assign to=\"javaSrc\"><![CDATA[",
      "      //import org.w3c.dom.Node; import org.w3c.dom.Element; import org.w3c.dom.Document;",
      "      //import com.sterlingcommerce.woodstock.util.frame.Manager;",
      "      //import com.sterlingcommerce.woodstock.workflow.Document;",
      "      //import com.sterlingcommerce.woodstock.util.frame.jdbc.JDBCService;",
      "      ",
      "      final org.w3c.dom.Document doc = ((Node) wfc.getWFContent(\"/ProcessData\")).getOwnerDocument();",
      "      // Do something... ",
      "      return \"OK\";",
      "      ]]>",
      "    </assign>",
      "  </output>",
      "  <input message=\"Xin\">",
      "    <assign to=\".\" from=\"*\" />",
      "  </input>",
      "</operation>",
    ],
    "description": "BPML inline Java code"
  },
  "BPML JDBC Operation": {
    "prefix": "bpJDBC",
    "body": [
      "<operation name=\"LJDBC:${1:name}\">",
      "  <participant name=\"DD_JDBC_ADAPTER_01\" />",
      "  <output message=\"LightweightJDBCAdapterTypeInputMessage\">",
      "    <assign to=\"query_type\">SELECT</assign>",
      "    <assign to=\"pool\" from=\"string(/ProcessData/DB_POOL)\" />",
      "    <assign to=\"result_name\">result</assign>",
      "    <assign to=\"row_name\">row</assign>",
      "    <assign to=\"param1\" from=\"string(/ProcessData/PARAM1)\" />",
      "    <assign to=\"paramtype1\">String</assign>",
      "    <assign to=\"param2\" from=\"number(/ProcessData/PARAM2)\" />",
      "    <assign to=\"paramtype2\">Long</assign>",
      "    <assign to=\"sql\">",
      "      SELECT COL3, COL4",
      "      FROM TABLE",
      "      WHERE COL1=? AND COL2=?",
      "    </assign>",
      "  </output>",
      "  <input message=\"Xin\">",
      "    <assign to=\"DBRESULT\" from=\"DocToDOM(PrimaryDocument, 'false', 'false')/row[1]/*\" />",
      "  </input>",
      "</operation>",
    ],
    "description": "BPML database access with Lightweight JDBC adapter"
  },
  "BPML GetDocumentMetadata": {
    "prefix": "bpGetDocMetadata",
    "body": [
      "<operation name=\"Get Metadata\">",
      "  <participant name=\"GetDocumentInfoService\" />",
      "  <output message=\"xout\">",
      "    <assign to=\"PrimaryDocument\" from=\"/ProcessData/PrimaryDocument/@*\" />",
      "  </output>",
      "  <input message=\"xin\">",
      "    <assign to=\"DOC_INFO\" from=\"/xin/DocumentId|/xin/DocumentName|/xin/DocumentLength|/xin/DocumentContentType|/xin/DocumentContentSubType|/xin/DocumentWorkflowId\" />",
      "  </input>",
      "</operation>",
    ],
    "description": "BPML get document metadata for primary doc"
  },
  "BPML GetBPMetadata": {
    "prefix": "bpGetProcessMetadata",
    "body": [
      "<operation name=\"Get BP metadata\">",
      "  <participant name=\"BPMetaDataInfoService\" />",
      "  <output message=\"xout\">",
      "    <assign to=\".\" from=\"*\" />",
      "  </output>",
      "  <input message=\"xin\">",
      "    <assign to=\"BP/ID\" from=\"string(BPDATA/WORKFLOW_ID)\" append=\"true\" />",
      "    <assign to=\"BP/MAIN\" from=\"if(boolean(/xin/BPDATA/*[contains(local-name(), 'INLINE_WFD')]), string(/xin/BPDATA/*[contains(local-name(), 'INLINE_WFD')][last()]/WFD_NAME), string(/xin/BPDATA/WFD_NAME))\" />",
      "    <assign to=\"BP/NAME\" from=\"string(BPDATA/WFD_NAME)\" />",
      "    <assign to=\"BP/QUEUE\" from=\"if(boolean(/xin/BPDATA/*[contains(local-name(), 'INLINE_WFD')]), string(/xin/BPDATA/*[contains(local-name(), 'INLINE_WFD')][last()]/WFD_PRIORITY), string(/xin/BPDATA/WFD_PRIORITY))\" />",
      "  </input>",
      "</operation>",
    ],
    "description": "BPML BP metadata"
  },
  "BPML SetDocumentMetadata": {
    "prefix": "bpSetDocMetadata",
    "body": [
      "<operation name=\"Set Metadata\">",
      "  <participant name=\"GetDocumentInfoService\" />",
      "  <output message=\"xout\">",
      "    <assign to=\"PrimaryDocument\" from=\"/ProcessData/PrimaryDocument/@*\" />",
      "    <assign to=\"updateMetaDataOnly\">true</assign>",
      "    <assign to=\"DocumentName\" from=\"/ProcessData/NEW_DOCNAME/text()\" />",
      "    <assign to=\"BodyName\" from=\"/ProcessData/NEW_DOCNAME/text()\" />",
      "    <assign to=\"DocumentContentType\" >text/xml</assign>",
      "    <assign to=\"DocumentCharEncoding\" >UTF-8</assign>",
      "  </output>",
      "  <input message=\"xin\">",
      "    <assign to=\"SET_DOCMETA\" from=\"*\" />",
      "  </input>",
      "</operation>",
    ],
    "description": "BPML set document metadata for primary doc"
  },
  "BPML InstantiatePrimaryDoc": {
    "prefix": "bpSetPrimaryDoc",
    "body": [
      "<operation name=\"InstantiateDoc\">",
      "  <participant name=\"GetDocumentInfoService\" />",
      "  <output message=\"xout\">",
      "    <assign to=\"DOCUMENT_ID\" from=\"/ProcessData/PRIMARY_DOCUMENT_ID\" />",
      "  </output>",
      "  <input message=\"xin\">",
      "    <assign to=\"DOC_INFO\" from=\"/xin/DocumentName|/xin/DocumentCreateTime|/xin/DocumentLength\" />",
      "    <assign to=\"PrimaryDocument\" from=\"/xin/PrimaryDocument/@*\" />",
      "  </input>",
      "</operation>",
    ],
    "description": "BPML set primary document from ID"
  },
  "BPML Create new text document": {
    "prefix": "bpCreateTextDoc",
    "body": [
      "<operation name=\"${1:name}\">",
      "  <participant name=\"TextDocAppender\" />",
      "  <output message=\"DocAppendInputMessage\">",
      "    <assign to=\"appendString\" from=\"concat('Hello ', /ProcessData/username, '.!')\" />",
      "  </output>",
      "  <input message=\"xin\">",
      "    <assign to=\".\" from=\"*\" />",
      "  </input>",
      "</operation>",
      "<operation name=\"Set ContentType\">",
      "  <participant name=\"GetDocumentInfoService\" />",
      "  <output message=\"xout\">",
      "    <assign to=\"PrimaryDocument\" from=\"/ProcessData/PrimaryDocument/@*\" />",
      "    <assign to=\"updateMetaDataOnly\">true</assign>",
      "    <assign to=\"DocumentContentType\" >application</assign>",
      "    <assign to=\"DocumentContentSubType\" >x-www-form-urlencoded</assign>",
      "  </output>",
      "  <input message=\"xin\">",
      "    <assign to=\"SET_DOCMETA\" from=\"*\" />",
      "  </input>",
      "</operation>",
    ],
    "description": "BPML set primary document from ID"
  },
  "BPML CLA2 invoke": {
    "prefix": "bpCLA2",
    "body": [
      "<operation name=\"${1:name}\">",
      "  <participant name=\"DD_CLA_LOCAL\" />",
      "  <output message=\"CmdLine2InputMessage\">",
      "    <assign to=\"useInput\">false</assign>",
      "    <assign to=\"useOutput\">false</assign>",
      "    <assign to=\"cmdLine\">/path/to/script.sh $Input $Output</assign>",
      "    <assign to=\"PrimaryDocument\" from=\"/ProcessData/PrimaryDocument/@*\" />",
      "    <assign to=\"createUniqueDirForEachFile\">true</assign>",
      "    <assign to=\"workingDir\">/tmp</assign>",
      "    <assign to=\"cla2_debug\">false</assign>",
      "    <assign to=\"successValue\">0</assign>",
      "    <assign to=\"inputName\">input.dat</assign>",
      "    <assign to=\"setSoTimeout\">30000</assign>",
      "  </output>",
      "  <input message=\"xin\">",
      "    <assign to=\"TMP_STEP/CLA2_RESULT\" from=\"*\" append=\"true\" />",
      "  </input>",
      "</operation>",
    ],
    "description": "BPML set primary document from ID"
   },
   "BPML LockService": {
    "prefix": "bpLockService",
    "body": [
      "<operation name=\"${1:CHECK}\">",
      "  <participant name=\"LockService\"/>",
      "  <output message=\"LockServiceTypeInputMessage\">",
      "    <assign to=\"ACTION\">${1:CHECK}</assign>",
      "    <assign to=\"LOCK_KEY\" from=\"${2:lockname}\" />",
      "    <assign to=\"USER\">admin</assign>",
      "  </output>",
      "  <input message=\"inmsg\">",
      "    <assign to=\"TMP_STEP/LOCK_EXIST\" from=\"boolean(LOCK_EXIST)\" />",
      "  </input>",
      "</operation>",
    ],
    "description": "BPML manipulate locks"
  },
}